/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Views;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 *
 * @author crist
 */
public class JPTasaGIF extends javax.swing.JPanel {
    ConexionSQL connect = new ConexionSQL();
    Connection con;
    Statement st;
    ResultSet rs;
    String iniciarT = "BEGIN";
    /**
     * Creates new form JPTasaGIF
     * @throws java.sql.SQLException
     */
    public JPTasaGIF() throws SQLException {
        initComponents();
        consultaTasaGIF();
        consultaCostoT();
    }
            
    private void consultaTasaGIF() throws SQLException{
        String queryMOD = "SELECT presupuesto, horasMOD FROM tasaGIF";
        con = connect.getConnection();
        st = con.createStatement();
        rs = st.executeQuery(queryMOD);
        try {
            while (rs.next()) {
                String presupuesto = rs.getString("presupuesto");
                String horasMOD = rs.getString("horasMOD");

                jLPresupuesto.setText(presupuesto);
                jLTotalHMOD.setText(horasMOD);
            }
        } catch (SQLException e) {
            System.out.println("Error: " + e);
        }
    }
    
    private void consultaCostoT() throws SQLException {
        String queryTotalC = "SELECT ROUND((presupuesto / horasMOD), 2) AS CostoT FROM tasaGIF";
        ResultSet rsTotalC = st.executeQuery(queryTotalC);

        if (rsTotalC.next()) {
            String costoTC = rsTotalC.getString("costoT");
            jLCostoT.setText(costoTC);
        }

        rsTotalC.close();
    }
    
    private void limpiarjTFieldPresupuesto() {
        jTFPresupuesto.setText("Presupuesto");
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPBackground = new javax.swing.JPanel();
        jTFPresupuesto = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jBAgregarInfo = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLCostoT = new javax.swing.JLabel();
        jBEliminar = new javax.swing.JButton();
        jLFondo = new javax.swing.JLabel();
        jLPresupuesto = new javax.swing.JLabel();
        jTFHorasMOD = new javax.swing.JTextField();
        jLTotalHMOD = new javax.swing.JLabel();

        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jPBackground.setBackground(new java.awt.Color(255, 255, 255));
        jPBackground.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jTFPresupuesto.setFont(new java.awt.Font("Roboto", 0, 13)); // NOI18N
        jTFPresupuesto.setText("Presupuesto");
        jTFPresupuesto.setBorder(null);
        jTFPresupuesto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTFPresupuestoMousePressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Roboto", 1, 30)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Calculo para tasa GIF");

        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));

        jSeparator3.setForeground(new java.awt.Color(0, 0, 0));

        jBAgregarInfo.setBackground(new java.awt.Color(12, 147, 81));
        jBAgregarInfo.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jBAgregarInfo.setForeground(new java.awt.Color(255, 255, 255));
        jBAgregarInfo.setText("CALCULAR");
        jBAgregarInfo.setBorderPainted(false);
        jBAgregarInfo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBAgregarInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAgregarInfoActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Roboto", 1, 16)); // NOI18N
        jLabel7.setText("Costo total:  $");

        jLCostoT.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N

        jBEliminar.setBackground(new java.awt.Color(221, 66, 62));
        jBEliminar.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jBEliminar.setForeground(new java.awt.Color(255, 255, 255));
        jBEliminar.setText("ELIMINAR");
        jBEliminar.setBorderPainted(false);
        jBEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEliminarActionPerformed(evt);
            }
        });

        jLFondo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/fondotazagif.png"))); // NOI18N
        jLFondo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLPresupuesto.setFont(new java.awt.Font("Roboto", 0, 13)); // NOI18N
        jLPresupuesto.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jTFHorasMOD.setFont(new java.awt.Font("Roboto", 0, 13)); // NOI18N
        jTFHorasMOD.setText("Horas MOD");
        jTFHorasMOD.setBorder(null);
        jTFHorasMOD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTFHorasMODMousePressed(evt);
            }
        });

        jLTotalHMOD.setFont(new java.awt.Font("Roboto", 0, 13)); // NOI18N
        jLTotalHMOD.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout jPBackgroundLayout = new javax.swing.GroupLayout(jPBackground);
        jPBackground.setLayout(jPBackgroundLayout);
        jPBackgroundLayout.setHorizontalGroup(
            jPBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPBackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLFondo, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 137, Short.MAX_VALUE)
                .addGroup(jPBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPBackgroundLayout.createSequentialGroup()
                        .addComponent(jTFHorasMOD, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLTotalHMOD, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jBEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPBackgroundLayout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLCostoT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(151, 151, 151))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPBackgroundLayout.createSequentialGroup()
                                .addComponent(jTFPresupuesto, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLPresupuesto, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jSeparator2)
                            .addComponent(jSeparator3)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(jBAgregarInfo)))
                .addGap(173, 173, 173))
        );
        jPBackgroundLayout.setVerticalGroup(
            jPBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPBackgroundLayout.createSequentialGroup()
                .addGap(117, 117, 117)
                .addGroup(jPBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLFondo, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPBackgroundLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTFPresupuesto, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLPresupuesto))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addGroup(jPBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTFHorasMOD, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLTotalHMOD))
                        .addGap(9, 9, 9)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jBAgregarInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addGroup(jPBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLCostoT))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(74, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTFPresupuestoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTFPresupuestoMousePressed
        if(jTFPresupuesto.getText().equals("Presupuesto")){
            jTFPresupuesto.setText("");
        }
        if(jTFHorasMOD.getText().isEmpty()){
            jTFHorasMOD.setText("Horas MOD"); 
        }
    }//GEN-LAST:event_jTFPresupuestoMousePressed

    private void jBAgregarInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAgregarInfoActionPerformed
        String presupuesto = jTFPresupuesto.getText();
        String horasMOD = jTFHorasMOD.getText();
        
        String queryInsert = "INSERT INTO tasaGIF (id, presupuesto, horasMOD) VALUES (1, "+presupuesto+", "+horasMOD+")";
        if(presupuesto.equals("Presupuesto") && horasMOD.equals("Horas MOD")){
            JOptionPane.showMessageDialog(null, "Ingrese el presupuesto para el calculo");
        } else{
            try {
                con = connect.getConnection();
                st = con.createStatement();
                st.execute(iniciarT);
                st.executeUpdate(queryInsert);
                JOptionPane.showMessageDialog(null, "Registro agregado");
                con.commit();
                consultaTasaGIF();
                consultaCostoT();
                limpiarjTFieldPresupuesto();

            } catch (SQLException e) {
                System.out.println("Error: " + e);
                if(con != null){
                    try {
                        JOptionPane.showMessageDialog(null, "Deshaciendo Cambios, usuarios maximos alcanzados");
                        con.rollback();
                        limpiarjTFieldPresupuesto();

                    } catch (SQLException ex) {
                        System.out.println("Error: "+ex);
                    }
                }
            } finally {
                try {
                    if (st != null && con != null) {
                        con.setAutoCommit(true);
                        st.close();
                        con.close();
                    }   
                } catch (SQLException e) {
                    System.out.println("Error al cerrar "+e);
                }
            }
        }
    }//GEN-LAST:event_jBAgregarInfoActionPerformed

    private void jBEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEliminarActionPerformed
        String sqlDeleteTG = "DELETE FROM tasaGIF";
        try {
            con = connect.getConnection();
            st = con.createStatement();
            st.execute(iniciarT);
            st.execute(sqlDeleteTG);
            JOptionPane.showMessageDialog(null, "Registros Eliminados");
            con.commit();
            
            jLPresupuesto.setText("");
            jLTotalHMOD.setText("");
            jLCostoT.setText("");
            consultaTasaGIF();
            consultaCostoT();
        } catch (Exception e) {
            System.out.println("El error fue: " + e);
            if (con != null) {
                try {
                    JOptionPane.showMessageDialog(null, "Deshaciendo Cambios");
                    con.rollback();
                } catch (SQLException ex) {
                    System.out.println("Error: " + ex);
                }
            }
        } finally {
            try {
                if (st != null && con != null) {
                    con.setAutoCommit(true);
                    st.close();
                    con.close();
                }
            } catch (SQLException e) {
                System.out.println("Error al cerrar " + e);
            }
        }
    }//GEN-LAST:event_jBEliminarActionPerformed

    private void jTFHorasMODMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTFHorasMODMousePressed
        if(jTFPresupuesto.getText().isEmpty()){
            jTFPresupuesto.setText("Presupuesto");
        }
        if(jTFHorasMOD.getText().equals("Horas MOD")){
            jTFHorasMOD.setText(""); 
        }
    }//GEN-LAST:event_jTFHorasMODMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAgregarInfo;
    private javax.swing.JButton jBEliminar;
    private javax.swing.JLabel jLCostoT;
    private javax.swing.JLabel jLFondo;
    private javax.swing.JLabel jLPresupuesto;
    private javax.swing.JLabel jLTotalHMOD;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPBackground;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTextField jTFHorasMOD;
    private javax.swing.JTextField jTFPresupuesto;
    // End of variables declaration//GEN-END:variables
}
